"""2

Revision ID: d209d10d94b2
Revises: 
Create Date: 2025-06-09 13:10:10.038977

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd209d10d94b2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('models',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=150), nullable=False),
    sa.Column('price_per_hour', sa.Integer(), nullable=True),
    sa.Column('price_per_foo', sa.Integer(), nullable=True),
    sa.Column('price_per_night', sa.Integer(), nullable=True),
    sa.Column('elit', sa.Boolean(), nullable=True),
    sa.Column('new', sa.Boolean(), nullable=True),
    sa.Column('indi', sa.Boolean(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('boobs', sa.Integer(), nullable=True),
    sa.Column('place', sa.String(), nullable=True),
    sa.Column('number', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('services',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_services_slug'), 'services', ['slug'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('model_photos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_uuid', sa.UUID(), nullable=False),
    sa.Column('photo_url', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['model_uuid'], ['models.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('model_service_association',
    sa.Column('model_uuid', sa.UUID(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['model_uuid'], ['models.uuid'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('model_uuid', 'service_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('model_service_association')
    op.drop_table('model_photos')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_services_slug'), table_name='services')
    op.drop_table('services')
    op.drop_table('models')
    # ### end Alembic commands ###
